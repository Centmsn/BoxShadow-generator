[{"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\index.js":"1","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\App.js":"2","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\CodeOutput.js":"3","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\reducers\\index.js":"4","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Preview\\Preview.js":"5","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Preview\\PreviewSettings.js":"6","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Options\\Options.js":"7","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Options\\Bar.js":"8","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Options\\Checkbox.js":"9","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Options\\Draggable.js":"10","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Options\\RGBColor.js":"11","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\List\\List.js":"12","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\List\\ListElement.js":"13","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\actions\\index.js":"14","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\actions\\types.js":"15","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\reducers\\Preview.js":"16","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\reducers\\BoxShadowList.js":"17","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\reducers\\ActiveId.js":"18","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Preview\\DisplayResult.js":"19","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\helpers\\index.js":"20","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Preview\\Info.js":"21","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Gallery\\Gallery.js":"22","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Gallery\\GalleryCard.js":"23","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Container.js":"24","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Gallery\\presets.js":"25","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Modal.js":"26","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Button.js":"27"},{"size":441,"mtime":1607809886938,"results":"28","hashOfConfig":"29"},{"size":1098,"mtime":1608128547314,"results":"30","hashOfConfig":"29"},{"size":2499,"mtime":1608816981740,"results":"31","hashOfConfig":"29"},{"size":274,"mtime":1607962349285,"results":"32","hashOfConfig":"29"},{"size":2714,"mtime":1608403322407,"results":"33","hashOfConfig":"29"},{"size":7322,"mtime":1608403353270,"results":"34","hashOfConfig":"29"},{"size":1274,"mtime":1608767370961,"results":"35","hashOfConfig":"29"},{"size":4891,"mtime":1608768837278,"results":"36","hashOfConfig":"29"},{"size":1775,"mtime":1608071589274,"results":"37","hashOfConfig":"29"},{"size":1091,"mtime":1608029690379,"results":"38","hashOfConfig":"29"},{"size":1757,"mtime":1608651401265,"results":"39","hashOfConfig":"29"},{"size":2165,"mtime":1608130655892,"results":"40","hashOfConfig":"29"},{"size":3536,"mtime":1608650520679,"results":"41","hashOfConfig":"29"},{"size":1578,"mtime":1608647147253,"results":"42","hashOfConfig":"29"},{"size":507,"mtime":1608647113272,"results":"43","hashOfConfig":"29"},{"size":468,"mtime":1607889151678,"results":"44","hashOfConfig":"29"},{"size":1757,"mtime":1608648981601,"results":"45","hashOfConfig":"29"},{"size":291,"mtime":1608130753063,"results":"46","hashOfConfig":"29"},{"size":407,"mtime":1608051798158,"results":"47","hashOfConfig":"29"},{"size":1173,"mtime":1608767904019,"results":"48","hashOfConfig":"29"},{"size":2107,"mtime":1608661287794,"results":"49","hashOfConfig":"29"},{"size":1515,"mtime":1608650529312,"results":"50","hashOfConfig":"29"},{"size":2945,"mtime":1608764945483,"results":"51","hashOfConfig":"29"},{"size":749,"mtime":1608403293553,"results":"52","hashOfConfig":"29"},{"size":3939,"mtime":1608768536755,"results":"53","hashOfConfig":"29"},{"size":1128,"mtime":1608816856328,"results":"54","hashOfConfig":"29"},{"size":647,"mtime":1608770145233,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"rj6sx6",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\index.js",[],["115","116"],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\App.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\CodeOutput.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\reducers\\index.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Preview\\Preview.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Preview\\PreviewSettings.js",["117","118"],"import { connect } from \"react-redux\";\r\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faEraser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\n\r\nimport Container from \"../Container\";\r\nimport { setBgCol, setBoxCol } from \"../../actions\";\r\n\r\nconst PreviewSettings = ({\r\n  visibility,\r\n  setVisibility,\r\n  setBgCol,\r\n  setBoxCol,\r\n  bg,\r\n  example,\r\n}) => {\r\n  const [colorError, setColorError] = useState({});\r\n  const [resetError, setResetError] = useState(\"\");\r\n\r\n  const handleBoxColorChange = (e, index, type) => {\r\n    // 1 - R\r\n    // 2 - G\r\n    // 3 - B\r\n\r\n    let val = e.target.value;\r\n\r\n    // validate input\r\n    if (!val) {\r\n      val = 0;\r\n    } else if (val > 255) {\r\n      val = 255;\r\n      if (Object.entries(colorError).length === 0) {\r\n        setColorError({ type, index });\r\n\r\n        setTimeout(() => {\r\n          setColorError({});\r\n        }, 3500);\r\n      }\r\n    } else if (val.match(/^0{2,}/)) {\r\n      val = val.slice(0, 1);\r\n    } else if (val.match(/^0\\d/)) {\r\n      val = val.slice(1);\r\n    }\r\n\r\n    if (type === \"box\") {\r\n      const { r, g, b } = example;\r\n\r\n      switch (index) {\r\n        case 1:\r\n          setBoxCol(val, g, b);\r\n          break;\r\n\r\n        case 2:\r\n          setBoxCol(r, val, b);\r\n          break;\r\n\r\n        case 3:\r\n          setBoxCol(r, g, val);\r\n          break;\r\n      }\r\n    } else {\r\n      const { r, g, b } = bg;\r\n\r\n      switch (index) {\r\n        case 1:\r\n          setBgCol(val, g, b);\r\n          break;\r\n\r\n        case 2:\r\n          setBgCol(r, val, b);\r\n          break;\r\n\r\n        case 3:\r\n          setBgCol(r, g, val);\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSettingsReset = () => {\r\n    if (\r\n      bg.r === 255 &&\r\n      bg.g === 255 &&\r\n      bg.b === 255 &&\r\n      example.r === 175 &&\r\n      example.g === 193 &&\r\n      example.b === 222 &&\r\n      !resetError\r\n    ) {\r\n      setResetError(\"Already using default values\");\r\n\r\n      setTimeout(() => {\r\n        setResetError(\"\");\r\n      }, 5000);\r\n    }\r\n\r\n    setBgCol(255, 255, 255);\r\n    setBoxCol(175, 193, 222);\r\n  };\r\n\r\n  const boxTooltip = colorError.type === \"box\" ? \"Range is 0-255\" : null;\r\n  const bgTooltip = colorError.type === \"bg\" ? \"Range is 0-255\" : null;\r\n\r\n  return (\r\n    <>\r\n      <Nav active={visibility}>\r\n        <FontAwesomeIcon icon={faCog} onClick={setVisibility} />\r\n      </Nav>\r\n\r\n      <Container visible={visibility}>\r\n        <Section>\r\n          <h2>Central box color</h2>\r\n\r\n          <label>\r\n            R\r\n            <ColorInput\r\n              value={example.r}\r\n              onChange={(e) => handleBoxColorChange(e, 1, \"box\")}\r\n              type=\"number\"\r\n              error={\r\n                colorError.type === \"box\" && colorError.index === 1\r\n                  ? true\r\n                  : false\r\n              }\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            G\r\n            <ColorInput\r\n              value={example.g}\r\n              onChange={(e) => handleBoxColorChange(e, 2, \"box\")}\r\n              type=\"number\"\r\n              error={\r\n                colorError.type === \"box\" && colorError.index === 2\r\n                  ? true\r\n                  : false\r\n              }\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            B\r\n            <ColorInput\r\n              value={example.b}\r\n              onChange={(e) => handleBoxColorChange(e, 3, \"box\")}\r\n              type=\"number\"\r\n              error={\r\n                colorError.type === \"box\" && colorError.index === 3\r\n                  ? true\r\n                  : false\r\n              }\r\n            />\r\n          </label>\r\n          <Tooltip>{boxTooltip}</Tooltip>\r\n        </Section>\r\n\r\n        <Section>\r\n          <h2>Background color</h2>\r\n\r\n          <label>\r\n            R\r\n            <ColorInput\r\n              value={bg.r}\r\n              onChange={(e) => handleBoxColorChange(e, 1, \"bg\")}\r\n              type=\"number\"\r\n              error={\r\n                colorError.type === \"bg\" && colorError.index === 1\r\n                  ? true\r\n                  : false\r\n              }\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            G\r\n            <ColorInput\r\n              value={bg.g}\r\n              onChange={(e) => handleBoxColorChange(e, 2, \"bg\")}\r\n              type=\"number\"\r\n              error={\r\n                colorError.type === \"bg\" && colorError.index === 2\r\n                  ? true\r\n                  : false\r\n              }\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            B\r\n            <ColorInput\r\n              value={bg.b}\r\n              onChange={(e) => handleBoxColorChange(e, 3, \"bg\")}\r\n              type=\"number\"\r\n              error={\r\n                colorError.type === \"bg\" && colorError.index === 3\r\n                  ? true\r\n                  : false\r\n              }\r\n            />\r\n          </label>\r\n          <Tooltip>{bgTooltip}</Tooltip>\r\n        </Section>\r\n\r\n        <Section>\r\n          <h2>Reset settings</h2>\r\n          <ResetBtn onClick={handleSettingsReset}>\r\n            <FontAwesomeIcon icon={faEraser} />\r\n          </ResetBtn>\r\n          <Tooltip>{resetError}</Tooltip>\r\n        </Section>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Nav = styled.div.attrs((props) => ({\r\n  style: {\r\n    color: props.active ? props.theme.lightBlue : null,\r\n  },\r\n}))`\r\n  color: white;\r\n\r\n  cursor: pointer;\r\n  transition: 300ms;\r\n\r\n  &::before {\r\n    content: \"Options\";\r\n    position: absolute;\r\n\r\n    left: 5px;\r\n    top: 5px;\r\n\r\n    font-family: ${({ theme }) => theme.font};\r\n    font-size: 2rem;\r\n\r\n    color: ${({ theme }) => theme.lightGray};\r\n    opacity: 0;\r\n    visibility: hidden;\r\n  }\r\n\r\n  &:hover {\r\n    color: ${({ theme }) => theme.lightBlue};\r\n    &::before {\r\n      opacity: 1;\r\n      visibility: visible;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ColorInput = styled.input`\r\n  width: 35px;\r\n  margin-left: 5px;\r\n\r\n  background: none;\r\n  border-top: none;\r\n  border-left: none;\r\n  border-right: none;\r\n  border-bottom: 2px solid\r\n    ${(props) => (props.error ? \"red\" : props.theme.lightBlue)};\r\n  outline: none;\r\n\r\n  font-family: ${({ theme }) => theme.font};\r\n  font-size: 1.1rem;\r\n  color: white;\r\n\r\n  &::-webkit-outer-spin-button,\r\n  &::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst Section = styled.section`\r\n  flex-basis: 100%;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  h2 {\r\n    flex-basis: 100%;\r\n\r\n    text-align: center;\r\n  }\r\n\r\n  label {\r\n    color: ${({ theme }) => theme.lightGray};\r\n  }\r\n`;\r\n\r\nconst ResetBtn = styled.button`\r\n  border: none;\r\n  outline: none;\r\n\r\n  font-size: 2rem;\r\n\r\n  background: none;\r\n  color: white;\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: ${({ theme }) => theme.lightBlue};\r\n  }\r\n`;\r\n\r\nconst Tooltip = styled.p`\r\n  flex-basis: 100%;\r\n  height: 1rem;\r\n\r\n  text-align: center;\r\n\r\n  color: ${({ theme }) => theme.lightGray};\r\n`;\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { bg, example } = state.preview;\r\n\r\n  return { bg, example };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setBoxCol, setBgCol })(\r\n  PreviewSettings\r\n);\r\n","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Options\\Options.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Options\\Bar.js",["119","120","121","122"],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Options\\Checkbox.js",["123"],"import { connect } from \"react-redux\";\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport styled from \"styled-components\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { setInset } from \"../../actions\";\r\n\r\nconst Checkbox = ({ text, list, setInset, activeId }) => {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (list[activeId].inset) {\r\n      setIsChecked(true);\r\n    } else {\r\n      setIsChecked(false);\r\n    }\r\n  }, [activeId]);\r\n\r\n  const toggleCheckbox = () => {\r\n    setIsChecked((prev) => !prev);\r\n\r\n    setInset(activeId, !isChecked);\r\n  };\r\n\r\n  const status = isChecked && <FontAwesomeIcon icon={faCheck} />;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Info>{text.toUpperCase()}</Info>\r\n      <Box onClick={toggleCheckbox} isChecked={isChecked}>\r\n        {status}\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  flex-basis: 20%;\r\n\r\n  display: flex;\r\n  justify-content: right;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  height: 25px;\r\n  width: 25px;\r\n\r\n  margin-left: 5px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: 2px solid ${({ theme }) => theme.darkBlue};\r\n  border-radius: 5px;\r\n\r\n  background-color: ${(props) =>\r\n    props.isChecked ? props.theme.lightBlue : \"none\"};\r\n  color: ${({ theme }) => theme.darkBlue};\r\n\r\n  padding: 3px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: white;\r\n  }\r\n`;\r\n\r\nconst Info = styled.p`\r\n  line-height: 25px;\r\n  user-select: none;\r\n`;\r\n\r\nconst mapStateToprops = (state) => {\r\n  return {\r\n    activeId: state.activeId,\r\n    list: state.boxShadowList,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToprops, { setInset })(Checkbox);\r\n","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Options\\Draggable.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Options\\RGBColor.js",["124","125"],"import { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { convertHexToRgb, convertRgbToHex } from \"../../helpers\";\r\nimport { setShadowColor } from \"../../actions\";\r\n\r\nconst RGBColor = ({ list, activeId, setShadowColor }) => {\r\n  const [thorttle, setThrottle] = useState(true);\r\n  const [hexColor, setHexColor] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const { r, g, b } = list[activeId].color;\r\n    const hex = convertRgbToHex(r, g, b);\r\n\r\n    setHexColor(hex);\r\n  }, [activeId, Object.keys(list).length]);\r\n\r\n  const handleColorChange = (e) => {\r\n    if (!thorttle) {\r\n      return;\r\n    }\r\n\r\n    setThrottle(false);\r\n\r\n    const color = convertHexToRgb(e.target.value);\r\n    setShadowColor(activeId, color);\r\n    setHexColor(e.target.value);\r\n    setTimeout(() => {\r\n      setThrottle(true);\r\n    }, 50);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <p>SHADOW COLOR</p>\r\n      <ColorInput type=\"color\" onChange={handleColorChange} value={hexColor} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  flex-basis: 80%;\r\n\r\n  display: flex;\r\n\r\n  label {\r\n    flex-basis: 10%;\r\n    min-width: 40px;\r\n    display: flex;\r\n\r\n    color: rgb(235, 235, 235);\r\n  }\r\n\r\n  p {\r\n    margin-right: 15px;\r\n  }\r\n`;\r\n\r\nconst ColorInput = styled.input`\r\n  width: 25%;\r\n\r\n  border: none;\r\n  border-radius: 5px;\r\n  outline: none;\r\n\r\n  background: none;\r\n  padding: 0 2px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    box-shadow: 0 0 0 1px black;\r\n    /* background-color: white; */\r\n  }\r\n`;\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    activeId: state.activeId,\r\n    list: state.boxShadowList,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setShadowColor })(RGBColor);\r\n","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\List\\List.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\List\\ListElement.js",["126","127","128"],"import { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMinusSquare } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styled from \"styled-components\";\r\nimport { useRef, useState } from \"react\";\r\n\r\nimport { removeBoxShadow, changeActiveId } from \"../../actions\";\r\n\r\nconst ListElement = ({\r\n  list,\r\n  listNum,\r\n  id,\r\n  color,\r\n  activeId,\r\n  removeBoxShadow,\r\n  changeActiveId,\r\n}) => {\r\n  const [listError, setListError] = useState(\"\");\r\n  const listItem = useRef(null);\r\n\r\n  const handleRemoveListItem = () => {\r\n    const keys = Object.keys(list);\r\n    if (keys.length - 1 === 0) {\r\n      setListError(\"You can't remove last element\");\r\n\r\n      if (!listError)\r\n        setTimeout(() => {\r\n          setListError(\"\");\r\n        }, 3500);\r\n      return;\r\n    }\r\n    if (activeId == keys[0] && id == keys[0]) {\r\n      changeActiveId(parseInt(keys[1]));\r\n    } else if (activeId == id) {\r\n      changeActiveId(parseInt(keys[0]));\r\n    }\r\n    removeBoxShadow(id);\r\n  };\r\n\r\n  const handleActiveIdChange = (e, id) => {\r\n    if (e.target !== listItem.current) {\r\n      return;\r\n    }\r\n    changeActiveId(id);\r\n  };\r\n\r\n  const error = listError && <Error>{listError}</Error>;\r\n\r\n  return (\r\n    <Wrapper\r\n      onClick={(e) => handleActiveIdChange(e, id)}\r\n      ref={listItem}\r\n      active={id === activeId}\r\n      color={color}\r\n      key={id}\r\n    >\r\n      {listNum + 1}\r\n      <span>\r\n        <FontAwesomeIcon icon={faMinusSquare} onClick={handleRemoveListItem} />\r\n      </span>\r\n\r\n      {error}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div.attrs((props) => ({\r\n  style: {\r\n    backgroundColor: props.color,\r\n  },\r\n}))`\r\n  position: relative;\r\n  width: 95%;\r\n  margin: 0 auto 15px auto;\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  border-radius: 5px;\r\n  box-shadow: 0 0 0 2px white,\r\n    0 0 0 4px\r\n      ${(props) =>\r\n        props.active ? props.theme.darkBlue : props.theme.lightBlue},\r\n    0 0 0 6px\r\n      ${(props) => (props.active ? props.theme.darkBlue : \"transparent\")};\r\n\r\n  font-size: 2rem;\r\n  -webkit-text-stroke-width: 0.5px;\r\n  -webkit-text-stroke-color: white;\r\n\r\n  padding: 0 5px;\r\n\r\n  transition: 200ms;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    box-shadow: 0 0 0 2px white, 0 0 0 4px ${(props) => props.theme.darkBlue},\r\n      0 0 0 6px\r\n        ${(props) =>\r\n          props.active ? props.theme.darkBlue : props.theme.lightBlue};\r\n  }\r\n\r\n  span {\r\n    line-height: 2rem;\r\n    color: ${({ theme }) => theme.lightBlue};\r\n\r\n    &::after {\r\n      content: \"remove shadow\";\r\n      position: absolute;\r\n      right: 50%;\r\n\r\n      transform: translateX(50%);\r\n\r\n      border-radius: 5px;\r\n\r\n      font-size: 1.25rem;\r\n      -webkit-text-stroke-width: 0px;\r\n\r\n      color: white;\r\n      background-color: ${({ theme }) => theme.lightBlue};\r\n\r\n      opacity: 0;\r\n      display: none;\r\n      padding: 0 5px;\r\n      transition: 200ms;\r\n    }\r\n\r\n    &:hover {\r\n      color: ${({ theme }) => theme.darkBlue};\r\n      &::after {\r\n        opacity: 1;\r\n        display: inline;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Error = styled.p`\r\n  position: absolute;\r\n\r\n  bottom: -40px;\r\n  left: 0;\r\n\r\n  font-size: 1.25rem;\r\n  -webkit-text-stroke-width: 0;\r\n\r\n  color: ${({ theme }) => theme.lightGray};\r\n`;\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    activeId: state.activeId,\r\n    list: state.boxShadowList,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { removeBoxShadow, changeActiveId })(\r\n  ListElement\r\n);\r\n","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\actions\\index.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\actions\\types.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\reducers\\Preview.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\reducers\\BoxShadowList.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\reducers\\ActiveId.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Preview\\DisplayResult.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\helpers\\index.js",["129","130","131","132","133"],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Preview\\Info.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Gallery\\Gallery.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Gallery\\GalleryCard.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Container.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Gallery\\presets.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Modal.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Button.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":50,"column":7,"nodeType":"140","messageId":"141","endLine":62,"endColumn":8},{"ruleId":"138","severity":1,"message":"139","line":66,"column":7,"nodeType":"140","messageId":"141","endLine":78,"endColumn":8},{"ruleId":"138","severity":1,"message":"139","line":48,"column":5,"nodeType":"140","messageId":"141","endLine":85,"endColumn":6},{"ruleId":"142","severity":1,"message":"143","line":86,"column":6,"nodeType":"144","endLine":86,"endColumn":42,"suggestions":"145"},{"ruleId":"142","severity":1,"message":"146","line":86,"column":17,"nodeType":"147","endLine":86,"endColumn":41},{"ruleId":"138","severity":1,"message":"139","line":130,"column":5,"nodeType":"140","messageId":"141","endLine":150,"endColumn":6},{"ruleId":"142","severity":1,"message":"148","line":18,"column":6,"nodeType":"144","endLine":18,"endColumn":16,"suggestions":"149"},{"ruleId":"142","severity":1,"message":"148","line":17,"column":6,"nodeType":"144","endLine":17,"endColumn":42,"suggestions":"150"},{"ruleId":"142","severity":1,"message":"146","line":17,"column":17,"nodeType":"147","endLine":17,"endColumn":41},{"ruleId":"151","severity":1,"message":"152","line":32,"column":18,"nodeType":"153","messageId":"154","endLine":32,"endColumn":20},{"ruleId":"151","severity":1,"message":"152","line":32,"column":35,"nodeType":"153","messageId":"154","endLine":32,"endColumn":37},{"ruleId":"151","severity":1,"message":"152","line":34,"column":25,"nodeType":"153","messageId":"154","endLine":34,"endColumn":27},{"ruleId":"151","severity":1,"message":"152","line":27,"column":16,"nodeType":"153","messageId":"154","endLine":27,"endColumn":18},{"ruleId":"151","severity":1,"message":"152","line":31,"column":23,"nodeType":"153","messageId":"154","endLine":31,"endColumn":25},{"ruleId":"151","severity":1,"message":"152","line":44,"column":16,"nodeType":"153","messageId":"154","endLine":44,"endColumn":18},{"ruleId":"151","severity":1,"message":"152","line":45,"column":16,"nodeType":"153","messageId":"154","endLine":45,"endColumn":18},{"ruleId":"151","severity":1,"message":"152","line":46,"column":16,"nodeType":"153","messageId":"154","endLine":46,"endColumn":18},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'changeActiveId', 'index', 'list', 'max', and 'min'. Either include them or remove the dependency array. If 'changeActiveId' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["157"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","React Hook useEffect has a missing dependency: 'list'. Either include it or remove the dependency array.",["158"],["159"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"162","fix":"164"},"Update the dependencies array to be: [activeId, changeActiveId, index, list, max, min]",{"range":"165","text":"166"},"Update the dependencies array to be: [activeId, list]",{"range":"167","text":"168"},{"range":"169","text":"168"},[2188,2224],"[activeId, changeActiveId, index, list, max, min]",[554,564],"[activeId, list]",[552,588]]