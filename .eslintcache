[{"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\index.js":"1","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\App.js":"2","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\CodeOutput.js":"3","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\reducers\\index.js":"4","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Preview\\Preview.js":"5","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Preview\\Gallery.js":"6","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Preview\\PreviewSettings.js":"7","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Preview\\Container.js":"8","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Options\\Options.js":"9","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Options\\Bar.js":"10","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Options\\Checkbox.js":"11","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Options\\Draggable.js":"12","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Options\\RGBColor.js":"13","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\List\\List.js":"14","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\List\\ListElement.js":"15","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\actions\\index.js":"16","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\actions\\types.js":"17","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\reducers\\Preview.js":"18","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\reducers\\BoxShadowList.js":"19","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\reducers\\ActiveId.js":"20","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Preview\\DisplayResult.js":"21","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\helpers\\index.js":"22","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Preview\\Info.js":"23","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Preview\\GalleryCard.js":"24"},{"size":441,"mtime":1607809886938,"results":"25","hashOfConfig":"26"},{"size":1098,"mtime":1608128547314,"results":"27","hashOfConfig":"26"},{"size":707,"mtime":1608130670791,"results":"28","hashOfConfig":"26"},{"size":274,"mtime":1607962349285,"results":"29","hashOfConfig":"26"},{"size":2705,"mtime":1608134240079,"results":"30","hashOfConfig":"26"},{"size":3784,"mtime":1608309073384,"results":"31","hashOfConfig":"26"},{"size":7321,"mtime":1608131198116,"results":"32","hashOfConfig":"26"},{"size":749,"mtime":1608143361257,"results":"33","hashOfConfig":"26"},{"size":1818,"mtime":1608132298461,"results":"34","hashOfConfig":"26"},{"size":4264,"mtime":1608134141179,"results":"35","hashOfConfig":"26"},{"size":1775,"mtime":1608071589274,"results":"36","hashOfConfig":"26"},{"size":1091,"mtime":1608029690379,"results":"37","hashOfConfig":"26"},{"size":1276,"mtime":1608386886123,"results":"38","hashOfConfig":"26"},{"size":2165,"mtime":1608130655892,"results":"39","hashOfConfig":"26"},{"size":3561,"mtime":1608383500882,"results":"40","hashOfConfig":"26"},{"size":1466,"mtime":1608051098583,"results":"41","hashOfConfig":"26"},{"size":472,"mtime":1608051064511,"results":"42","hashOfConfig":"26"},{"size":468,"mtime":1607889151678,"results":"43","hashOfConfig":"26"},{"size":1687,"mtime":1608130733342,"results":"44","hashOfConfig":"26"},{"size":291,"mtime":1608130753063,"results":"45","hashOfConfig":"26"},{"size":407,"mtime":1608051798158,"results":"46","hashOfConfig":"26"},{"size":949,"mtime":1608383328198,"results":"47","hashOfConfig":"26"},{"size":2083,"mtime":1608131214361,"results":"48","hashOfConfig":"26"},{"size":1260,"mtime":1608144571242,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"rj6sx6",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\index.js",[],["102","103"],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\App.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\CodeOutput.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\reducers\\index.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Preview\\Preview.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Preview\\Gallery.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Preview\\PreviewSettings.js",["104","105"],"import { connect } from \"react-redux\";\r\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faEraser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\n\r\nimport Container from \"./Container\";\r\nimport { setBgCol, setBoxCol } from \"../../actions\";\r\n\r\nconst PreviewSettings = ({\r\n  visibility,\r\n  setVisibility,\r\n  setBgCol,\r\n  setBoxCol,\r\n  bg,\r\n  example,\r\n}) => {\r\n  const [colorError, setColorError] = useState({});\r\n  const [resetError, setResetError] = useState(\"\");\r\n\r\n  const handleBoxColorChange = (e, index, type) => {\r\n    // 1 - R\r\n    // 2 - G\r\n    // 3 - B\r\n\r\n    let val = e.target.value;\r\n\r\n    // validate input\r\n    if (!val) {\r\n      val = 0;\r\n    } else if (val > 255) {\r\n      val = 255;\r\n      if (Object.entries(colorError).length === 0) {\r\n        setColorError({ type, index });\r\n\r\n        setTimeout(() => {\r\n          setColorError({});\r\n        }, 3500);\r\n      }\r\n    } else if (val.match(/^0{2,}/)) {\r\n      val = val.slice(0, 1);\r\n    } else if (val.match(/^0\\d/)) {\r\n      val = val.slice(1);\r\n    }\r\n\r\n    if (type === \"box\") {\r\n      const { r, g, b } = example;\r\n\r\n      switch (index) {\r\n        case 1:\r\n          setBoxCol(val, g, b);\r\n          break;\r\n\r\n        case 2:\r\n          setBoxCol(r, val, b);\r\n          break;\r\n\r\n        case 3:\r\n          setBoxCol(r, g, val);\r\n          break;\r\n      }\r\n    } else {\r\n      const { r, g, b } = bg;\r\n\r\n      switch (index) {\r\n        case 1:\r\n          setBgCol(val, g, b);\r\n          break;\r\n\r\n        case 2:\r\n          setBgCol(r, val, b);\r\n          break;\r\n\r\n        case 3:\r\n          setBgCol(r, g, val);\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSettingsReset = () => {\r\n    if (\r\n      bg.r === 255 &&\r\n      bg.g === 255 &&\r\n      bg.b === 255 &&\r\n      example.r === 175 &&\r\n      example.g === 193 &&\r\n      example.b === 222 &&\r\n      !resetError\r\n    ) {\r\n      setResetError(\"Already using default values\");\r\n\r\n      setTimeout(() => {\r\n        setResetError(\"\");\r\n      }, 5000);\r\n    }\r\n\r\n    setBgCol(255, 255, 255);\r\n    setBoxCol(175, 193, 222);\r\n  };\r\n\r\n  const boxTooltip = colorError.type === \"box\" ? \"Range is 0-255\" : null;\r\n  const bgTooltip = colorError.type === \"bg\" ? \"Range is 0-255\" : null;\r\n\r\n  return (\r\n    <>\r\n      <Nav active={visibility}>\r\n        <FontAwesomeIcon icon={faCog} onClick={setVisibility} />\r\n      </Nav>\r\n\r\n      <Container visible={visibility}>\r\n        <Section>\r\n          <h2>Central box color</h2>\r\n\r\n          <label>\r\n            R\r\n            <ColorInput\r\n              value={example.r}\r\n              onChange={(e) => handleBoxColorChange(e, 1, \"box\")}\r\n              type=\"number\"\r\n              error={\r\n                colorError.type === \"box\" && colorError.index === 1\r\n                  ? true\r\n                  : false\r\n              }\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            G\r\n            <ColorInput\r\n              value={example.g}\r\n              onChange={(e) => handleBoxColorChange(e, 2, \"box\")}\r\n              type=\"number\"\r\n              error={\r\n                colorError.type === \"box\" && colorError.index === 2\r\n                  ? true\r\n                  : false\r\n              }\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            B\r\n            <ColorInput\r\n              value={example.b}\r\n              onChange={(e) => handleBoxColorChange(e, 3, \"box\")}\r\n              type=\"number\"\r\n              error={\r\n                colorError.type === \"box\" && colorError.index === 3\r\n                  ? true\r\n                  : false\r\n              }\r\n            />\r\n          </label>\r\n          <Tooltip>{boxTooltip}</Tooltip>\r\n        </Section>\r\n\r\n        <Section>\r\n          <h2>Background color</h2>\r\n\r\n          <label>\r\n            R\r\n            <ColorInput\r\n              value={bg.r}\r\n              onChange={(e) => handleBoxColorChange(e, 1, \"bg\")}\r\n              type=\"number\"\r\n              error={\r\n                colorError.type === \"bg\" && colorError.index === 1\r\n                  ? true\r\n                  : false\r\n              }\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            G\r\n            <ColorInput\r\n              value={bg.g}\r\n              onChange={(e) => handleBoxColorChange(e, 2, \"bg\")}\r\n              type=\"number\"\r\n              error={\r\n                colorError.type === \"bg\" && colorError.index === 2\r\n                  ? true\r\n                  : false\r\n              }\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            B\r\n            <ColorInput\r\n              value={bg.b}\r\n              onChange={(e) => handleBoxColorChange(e, 3, \"bg\")}\r\n              type=\"number\"\r\n              error={\r\n                colorError.type === \"bg\" && colorError.index === 3\r\n                  ? true\r\n                  : false\r\n              }\r\n            />\r\n          </label>\r\n          <Tooltip>{bgTooltip}</Tooltip>\r\n        </Section>\r\n\r\n        <Section>\r\n          <h2>Reset settings</h2>\r\n          <ResetBtn onClick={handleSettingsReset}>\r\n            <FontAwesomeIcon icon={faEraser} />\r\n          </ResetBtn>\r\n          <Tooltip>{resetError}</Tooltip>\r\n        </Section>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Nav = styled.div.attrs((props) => ({\r\n  style: {\r\n    color: props.active ? props.theme.lightBlue : null,\r\n  },\r\n}))`\r\n  color: white;\r\n\r\n  cursor: pointer;\r\n  transition: 300ms;\r\n\r\n  &::before {\r\n    content: \"Options\";\r\n    position: absolute;\r\n\r\n    left: 5px;\r\n    top: 5px;\r\n\r\n    font-family: ${({ theme }) => theme.font};\r\n    font-size: 2rem;\r\n\r\n    color: ${({ theme }) => theme.lightGray};\r\n    opacity: 0;\r\n    visibility: hidden;\r\n  }\r\n\r\n  &:hover {\r\n    color: ${({ theme }) => theme.lightBlue};\r\n    &::before {\r\n      opacity: 1;\r\n      visibility: visible;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ColorInput = styled.input`\r\n  width: 35px;\r\n  margin-left: 5px;\r\n\r\n  background: none;\r\n  border-top: none;\r\n  border-left: none;\r\n  border-right: none;\r\n  border-bottom: 2px solid\r\n    ${(props) => (props.error ? \"red\" : props.theme.lightBlue)};\r\n  outline: none;\r\n\r\n  font-family: ${({ theme }) => theme.font};\r\n  font-size: 1.1rem;\r\n  color: white;\r\n\r\n  &::-webkit-outer-spin-button,\r\n  &::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst Section = styled.section`\r\n  flex-basis: 100%;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  h2 {\r\n    flex-basis: 100%;\r\n\r\n    text-align: center;\r\n  }\r\n\r\n  label {\r\n    color: ${({ theme }) => theme.lightGray};\r\n  }\r\n`;\r\n\r\nconst ResetBtn = styled.button`\r\n  border: none;\r\n  outline: none;\r\n\r\n  font-size: 2rem;\r\n\r\n  background: none;\r\n  color: white;\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: ${({ theme }) => theme.lightBlue};\r\n  }\r\n`;\r\n\r\nconst Tooltip = styled.p`\r\n  flex-basis: 100%;\r\n  height: 1rem;\r\n\r\n  text-align: center;\r\n\r\n  color: ${({ theme }) => theme.lightGray};\r\n`;\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { bg, example } = state.preview;\r\n\r\n  return { bg, example };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setBoxCol, setBgCol })(\r\n  PreviewSettings\r\n);\r\n","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Preview\\Container.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Options\\Options.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Options\\Bar.js",["106","107","108"],"import { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { useRef, useEffect, useState } from \"react\";\r\n\r\nimport Draggable from \"./Draggable\";\r\nimport {\r\n  setOffsetX,\r\n  setOffsetY,\r\n  setSpread,\r\n  setBlur,\r\n  changeActiveId,\r\n} from \"../../actions\";\r\n\r\nconst Bar = ({\r\n  list,\r\n  text,\r\n  min,\r\n  max,\r\n  index,\r\n  activeId,\r\n  position,\r\n  setPosition,\r\n  setOffsetX,\r\n  setOffsetY,\r\n  setSpread,\r\n  setBlur,\r\n  changeActiveId,\r\n}) => {\r\n  const [innerBarWidth, setInnerBarWidth] = useState(0);\r\n  const [barInfo, setBarInfo] = useState(0);\r\n  const bar = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const { width } = bar.current.getBoundingClientRect();\r\n    const range = parseInt(Math.abs(min) + max);\r\n\r\n    if (!list[activeId]) {\r\n      changeActiveId(Object.keys(list)[0]);\r\n      return;\r\n    }\r\n\r\n    switch (text) {\r\n      case \"Offset X\":\r\n        const posX =\r\n          ((width / range) * (range + 2 * list[activeId].x)) / 2 - 15;\r\n        setPosition(posX);\r\n        setInnerBarWidth(posX + 15);\r\n        setBarInfo(list[activeId].x);\r\n        break;\r\n\r\n      case \"Offset Y\":\r\n        const posY =\r\n          ((width / range) * (range + 2 * list[activeId].y)) / 2 - 15;\r\n        setPosition(posY);\r\n        setInnerBarWidth(posY + 15);\r\n        setBarInfo(list[activeId].y);\r\n        break;\r\n\r\n      case \"Spread\":\r\n        const spread = (width / range) * list[activeId].s - 15;\r\n        setPosition(spread);\r\n        setInnerBarWidth(spread + 15);\r\n        setBarInfo(list[activeId].s);\r\n        break;\r\n\r\n      case \"Blur\":\r\n        const blur = (width / range) * list[activeId].b - 15;\r\n        setPosition(blur);\r\n        setInnerBarWidth(blur + 15);\r\n        setBarInfo(list[activeId].b);\r\n        break;\r\n    }\r\n  }, [activeId]);\r\n\r\n  const handlePositionChange = (e) => {\r\n    const { width, left } = bar.current.getBoundingClientRect();\r\n\r\n    let positionX = e.clientX - left - 15;\r\n\r\n    if (positionX > width - 30) {\r\n      positionX = width - 30;\r\n    } else if (positionX < -2) {\r\n      positionX = -2;\r\n    }\r\n    setPosition(positionX);\r\n    setInnerBarWidth(positionX + 5);\r\n\r\n    updateBarInfo(width, left, e);\r\n  };\r\n\r\n  const updateBarInfo = (width, left, e) => {\r\n    const base = (Math.abs(min) + max) / (width - 15);\r\n    let info;\r\n\r\n    if (min === 0) {\r\n      info = Math.floor((e.clientX - left) * base);\r\n    } else {\r\n      const middle = width / 2;\r\n\r\n      info = Math.floor((e.clientX - left - middle) * base);\r\n    }\r\n\r\n    if (info > max) info = max;\r\n    else if (info < min) info = min;\r\n\r\n    setBarInfo(info);\r\n    updateBoxShadow(info);\r\n  };\r\n\r\n  const updateBoxShadow = (offset) => {\r\n    // 1 - offsetX\r\n    // 2 - offsetY\r\n    // 3 - spread\r\n    // 4 - blur\r\n\r\n    switch (index) {\r\n      case 1:\r\n        setOffsetX(offset, activeId);\r\n        break;\r\n\r\n      case 2:\r\n        setOffsetY(offset, activeId);\r\n        break;\r\n\r\n      case 3:\r\n        setSpread(offset, activeId);\r\n        break;\r\n\r\n      case 4:\r\n        setBlur(offset, activeId);\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Label>{text.toUpperCase()}</Label>\r\n      <OptionBar ref={bar}>\r\n        <InnerBar width={innerBarWidth} />\r\n        <Draggable\r\n          position={position}\r\n          setPosition={handlePositionChange}\r\n          text={barInfo}\r\n        />\r\n      </OptionBar>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  justify-content: flex-end;\r\n  flex-basis: 100%;\r\n  display: flex;\r\n`;\r\n\r\nconst OptionBar = styled.div`\r\n  position: relative;\r\n  flex-basis: 75%;\r\n  height: 25px;\r\n\r\n  border: 2px solid ${({ theme }) => theme.darkBlue};\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst InnerBar = styled.div.attrs((props) => ({\r\n  style: { width: props.width },\r\n}))`\r\n  position: absolute;\r\n\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n\r\n  border-radius: 5px;\r\n  background-color: ${({ theme }) => theme.lightBlue};\r\n`;\r\n\r\nconst Label = styled.p`\r\n  flex-basis: 20%;\r\n\r\n  text-align: left;\r\n  user-select: none;\r\n`;\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    activeId: state.activeId,\r\n    list: state.boxShadowList,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setOffsetX,\r\n  setOffsetY,\r\n  setSpread,\r\n  setBlur,\r\n  changeActiveId,\r\n})(Bar);\r\n","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Options\\Checkbox.js",["109"],"import { connect } from \"react-redux\";\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport styled from \"styled-components\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { setInset } from \"../../actions\";\r\n\r\nconst Checkbox = ({ text, list, setInset, activeId }) => {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (list[activeId].inset) {\r\n      setIsChecked(true);\r\n    } else {\r\n      setIsChecked(false);\r\n    }\r\n  }, [activeId]);\r\n\r\n  const toggleCheckbox = () => {\r\n    setIsChecked((prev) => !prev);\r\n\r\n    setInset(activeId, !isChecked);\r\n  };\r\n\r\n  const status = isChecked && <FontAwesomeIcon icon={faCheck} />;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Info>{text.toUpperCase()}</Info>\r\n      <Box onClick={toggleCheckbox} isChecked={isChecked}>\r\n        {status}\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  flex-basis: 20%;\r\n\r\n  display: flex;\r\n  justify-content: right;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  height: 25px;\r\n  width: 25px;\r\n\r\n  margin-left: 5px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: 2px solid ${({ theme }) => theme.darkBlue};\r\n  border-radius: 5px;\r\n\r\n  background-color: ${(props) =>\r\n    props.isChecked ? props.theme.lightBlue : \"none\"};\r\n  color: ${({ theme }) => theme.darkBlue};\r\n\r\n  padding: 3px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: white;\r\n  }\r\n`;\r\n\r\nconst Info = styled.p`\r\n  line-height: 25px;\r\n  user-select: none;\r\n`;\r\n\r\nconst mapStateToprops = (state) => {\r\n  return {\r\n    activeId: state.activeId,\r\n    list: state.boxShadowList,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToprops, { setInset })(Checkbox);\r\n","C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Options\\Draggable.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Options\\RGBColor.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\List\\List.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\List\\ListElement.js",["110","111","112","113"],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\actions\\index.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\actions\\types.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\reducers\\Preview.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\reducers\\BoxShadowList.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\reducers\\ActiveId.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Preview\\DisplayResult.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\helpers\\index.js",["114","115"],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Preview\\Info.js",[],"C:\\Users\\Asus\\Desktop\\projekty\\boxshadow-generator\\src\\components\\Preview\\GalleryCard.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":50,"column":7,"nodeType":"122","messageId":"123","endLine":62,"endColumn":8},{"ruleId":"120","severity":1,"message":"121","line":66,"column":7,"nodeType":"122","messageId":"123","endLine":78,"endColumn":8},{"ruleId":"120","severity":1,"message":"121","line":42,"column":5,"nodeType":"122","messageId":"123","endLine":72,"endColumn":6},{"ruleId":"124","severity":1,"message":"125","line":73,"column":6,"nodeType":"126","endLine":73,"endColumn":16,"suggestions":"127"},{"ruleId":"120","severity":1,"message":"121","line":116,"column":5,"nodeType":"122","messageId":"123","endLine":132,"endColumn":6},{"ruleId":"124","severity":1,"message":"128","line":18,"column":6,"nodeType":"126","endLine":18,"endColumn":16,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":1,"column":8,"nodeType":"132","messageId":"133","endLine":1,"endColumn":9},{"ruleId":"134","severity":1,"message":"135","line":33,"column":18,"nodeType":"136","messageId":"137","endLine":33,"endColumn":20},{"ruleId":"134","severity":1,"message":"135","line":33,"column":35,"nodeType":"136","messageId":"137","endLine":33,"endColumn":37},{"ruleId":"134","severity":1,"message":"135","line":35,"column":25,"nodeType":"136","messageId":"137","endLine":35,"endColumn":27},{"ruleId":"134","severity":1,"message":"135","line":28,"column":16,"nodeType":"136","messageId":"137","endLine":28,"endColumn":18},{"ruleId":"134","severity":1,"message":"135","line":34,"column":23,"nodeType":"136","messageId":"137","endLine":34,"endColumn":25},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'changeActiveId', 'list', 'max', 'min', 'setPosition', and 'text'. Either include them or remove the dependency array. If 'changeActiveId' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["140"],"React Hook useEffect has a missing dependency: 'list'. Either include it or remove the dependency array.",["141"],"no-unused-vars","'_' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [activeId, changeActiveId, list, max, min, setPosition, text]",{"range":"146","text":"147"},"Update the dependencies array to be: [activeId, list]",{"range":"148","text":"149"},[1771,1781],"[activeId, changeActiveId, list, max, min, setPosition, text]",[554,564],"[activeId, list]"]